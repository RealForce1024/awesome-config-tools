image: 3.5-jdk-8-alpine

before_script:
  - whoami
  - pwd
  - echo $PATH
  - which mvn
  - which java

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/repository

# This will only validate and compile stuff and run e.g. maven-enforcer-plugin.
# Because some enforcer rules might check dependency convergence and class duplications
# we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
compile:
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS test-compile'

# Run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
verify:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  artifacts:
    paths:
    - target/*.jar

#junit:
#  image: elct9620/gitlab-android-junit
#  script:
#    - ./gradlew test
    
sonar:
  image: elct9620/gitlab-sonar-scanner
  script:
    - "/bin/true"

package:
  script:
    - mvn clean install
 
